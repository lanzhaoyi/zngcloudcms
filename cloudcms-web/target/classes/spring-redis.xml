<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"  
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"  
    xmlns:aop="http://www.springframework.org/schema/aop"  
    xsi:schemaLocation="  
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd  
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
		
	<context:property-placeholder location="classpath:redis.properties" ignore-unresolvable="true" />
	
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<!-- 最大连接数 -->
		<property name="maxTotal" value="30" />
		<!-- 最大空闲连接数 -->
		<property name="maxIdle" value="10" />
		<!-- 每次释放连接的最大数目 -->
		<property name="numTestsPerEvictionRun" value="1024" />
		<!-- 释放连接的扫描间隔（毫秒） -->
		<property name="timeBetweenEvictionRunsMillis" value="30000" />
		<!-- 连接最小空闲时间 -->
		<property name="minEvictableIdleTimeMillis" value="1800000" />
		<!-- 连接空闲多久后释放, 当空闲时间>该值 且 空闲连接>最大空闲连接数 时直接释放 -->
		<property name="softMinEvictableIdleTimeMillis" value="10000" />
		<!-- 获取连接时的最大等待毫秒数,小于零:阻塞不确定的时间,默认-1 -->
		<property name="maxWaitMillis" value="1500" />
		<!-- 在获取连接的时候检查有效性, 默认false -->
		<property name="testOnBorrow" value="true" />
		<!-- 在空闲时检查有效性, 默认false -->
		<property name="testWhileIdle" value="true" />
		<!-- 连接耗尽时是否阻塞, false报异常,ture阻塞直到超时, 默认true -->
		<property name="blockWhenExhausted" value="false" />
	</bean>
	
	<!-- jides客户端单机版 -->
	<bean id="jedisPool" class="redis.clients.jedis.JedisPool">
		<constructor-arg name="host" value="192.168.238.129"></constructor-arg>
		<constructor-arg name="port" value="7001"></constructor-arg>
		<constructor-arg name="poolConfig" ref="jedisPoolConfig"></constructor-arg>
	</bean>

	<bean name="jedisClientSingle" class="com.zngcloudcms.utils.redis.JedisClientSingle">
		<property name="redisClient" ref="jedisPool"></property>
	</bean>
	
	
	<!-- jedis集群 -->
	<bean id="redisCluster" class="redis.clients.jedis.JedisCluster">
		<constructor-arg name="nodes" index="0">
			<set>
				<bean class="redis.clients.jedis.HostAndPort">
					<constructor-arg type="String" name="host" value="192.168.238.128"></constructor-arg>
					<constructor-arg type="int" name="port" value="7001"></constructor-arg>
				</bean>
				<bean class="redis.clients.jedis.HostAndPort">
					<constructor-arg type="String" name="host" value="192.168.238.129"></constructor-arg>
					<constructor-arg type="int" name="port" value="7001"></constructor-arg>
				</bean>
			</set>
		</constructor-arg>
		<constructor-arg name="poolConfig" index="1" ref="jedisPoolConfig"></constructor-arg>
	</bean>
	
	<bean name="jedisClientCluster" class="com.zngcloudcms.utils.redis.JedisClientCluster">
		<property name="jedisCluster" ref="redisCluster"></property>
	</bean>
    
   <!--  <bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
    	<property name="hostName" value="${redis.master.host}" />
    	<property name="port" value="${redis.master.port}" />
    	<property name="password" value="${redis.master.pass}" />
    </bean>
      
    <bean id="redisTemplate" class="com.zngcloudcms.utils.redis.MyStringRedisTemplate">  
        <property name="connectionFactory"   ref="connectionFactory" />  
    </bean> -->
    
</beans>